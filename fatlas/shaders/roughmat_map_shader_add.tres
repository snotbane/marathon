[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://t0bd3o8fjfn6"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_muyhk"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_sum17"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_hnqa6"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05]
function = 4

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_36aku"]

[resource]
code = "shader_type canvas_item;
render_mode blend_add, unshaded;




void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, UV);
	float n_out3p4 = n_out3p0.a;


// Compare:6
	float n_in6p1 = 1.00000;
	bool n_out6p0 = n_out3p4 < n_in6p1;


	float n_out7p0;
// Switch:7
	float n_in7p2 = 0.00000;
	n_out7p0 = mix(n_in7p2, n_out3p4, float(n_out6p0));


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out7p0;


}
"
mode = 1
modes/blend = 1
flags/unshaded = true
flags/light_only = false
nodes/fragment/0/position = Vector2(720, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_muyhk")
nodes/fragment/2/position = Vector2(-820, 20)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_sum17")
nodes/fragment/3/position = Vector2(-380, -40)
nodes/fragment/6/node = SubResource("VisualShaderNodeCompare_hnqa6")
nodes/fragment/6/position = Vector2(40, 260)
nodes/fragment/7/node = SubResource("VisualShaderNodeSwitch_36aku")
nodes/fragment/7/position = Vector2(380, 420)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0, 3, 4, 6, 0, 6, 0, 7, 0, 7, 0, 0, 1, 3, 4, 7, 1)

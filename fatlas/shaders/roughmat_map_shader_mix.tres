[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://cnm6jflfce5ck"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_bpqve"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_jfr85"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1e-05]
function = 4

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_pls5c"]
default_input_values = [0, false, 1, 0.0, 2, 0.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_07whw"]
input_name = "texture"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;




void fragment() {
	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(TEXTURE, UV);
	float n_out2p4 = n_out2p0.a;


// Compare:3
	float n_in3p1 = 1.00000;
	bool n_out3p0 = n_out2p4 < n_in3p1;


	float n_out4p0;
// Switch:4
	float n_in4p1 = 0.00000;
	n_out4p0 = mix(n_out2p4, n_in4p1, float(n_out3p0));


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);
	COLOR.a = n_out4p0;


}
"
mode = 1
flags/unshaded = true
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_bpqve")
nodes/fragment/2/position = Vector2(-680, -120)
nodes/fragment/3/node = SubResource("VisualShaderNodeCompare_jfr85")
nodes/fragment/3/position = Vector2(-260, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeSwitch_pls5c")
nodes/fragment/4/position = Vector2(80, 340)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_07whw")
nodes/fragment/5/position = Vector2(-1180, -40)
nodes/fragment/connections = PackedInt32Array(2, 4, 3, 0, 3, 0, 4, 0, 2, 0, 0, 0, 5, 0, 2, 2, 2, 4, 4, 2, 4, 0, 0, 1)
